{"ast":null,"code":"var _jsxFileName = \"/Users/benjamindordoigne/Desktop/WMCA-Opportunities-App/src/components/blogSummary/blogSummary.jsx\";\nimport React from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport DOMPurify from \"dompurify\"; // import components\n\nimport BtnSecondary from \"../buttons/btnSecondary\"; //import CategoryTag from \"../categoryTag/categoryTag\";\n\nconst BlogSummary = ({\n  blog\n}) => {\n  const sanitize = DOMPurify.sanitize; // get published date parse the string and set variables for day,\n  // month and year to customise date layout\n\n  const parsedDate = Date.parse(blog.PubDate);\n  const pubDateday = new Intl.DateTimeFormat(\"en-GB\", {\n    day: \"2-digit\"\n  }).format(parsedDate);\n  const pubDateMonth = new Intl.DateTimeFormat(\"en-GB\", {\n    month: \"long\"\n  }).format(parsedDate);\n  const pubDateYear = new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\"\n  }).format(parsedDate);\n  const fromDate = Date.parse(blog.DateFrom);\n  const fromDateday = new Intl.DateTimeFormat(\"en-GB\", {\n    day: \"2-digit\"\n  }).format(fromDate);\n  const fromDateMonth = new Intl.DateTimeFormat(\"en-GB\", {\n    month: \"long\"\n  }).format(fromDate);\n  const fromDateYear = new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\"\n  }).format(fromDate);\n  const toDate = Date.parse(blog.DateTo);\n  const toDateday = new Intl.DateTimeFormat(\"en-GB\", {\n    day: \"2-digit\"\n  }).format(toDate);\n  const toDateMonth = new Intl.DateTimeFormat(\"en-GB\", {\n    month: \"long\"\n  }).format(toDate);\n  const toDateYear = new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\"\n  }).format(toDate); // store blog copy in const variable\n\n  const content = blog.BlogContent; // trim the content to first closing paragraph\n  // this is used for the overview on the blog index/archive\n\n  let trimmedContent = content.substr(0);\n  trimmedContent = trimmedContent.substr(0, Math.min(trimmedContent.length, trimmedContent.indexOf(\"</p>\")));\n  return React.createElement(React.Fragment, null, React.createElement(\"article\", {\n    className: \"wdgt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, blog.Name), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"highlight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Where it is:\"), \" \", blog.Where), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"highlight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"You need to live in:\"), \" \", blog.LiveIn), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"highlight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"You must be:\"), \" \", blog.Age), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"highlight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"It runs from:\"), \" \", `${fromDateMonth} ${fromDateday}, ${fromDateYear}`, \" - \", `${toDateMonth} ${toDateday}, ${toDateYear}`)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, blog.BlogContent), React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: sanitize(trimmedContent)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(BtnSecondary, {\n    linkText: \"Find out more\",\n    linkTo: blog.Url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n};\n\nexport default BlogSummary;","map":{"version":3,"sources":["/Users/benjamindordoigne/Desktop/WMCA-Opportunities-App/src/components/blogSummary/blogSummary.jsx"],"names":["React","DOMPurify","BtnSecondary","BlogSummary","blog","sanitize","parsedDate","Date","parse","PubDate","pubDateday","Intl","DateTimeFormat","day","format","pubDateMonth","month","pubDateYear","year","fromDate","DateFrom","fromDateday","fromDateMonth","fromDateYear","toDate","DateTo","toDateday","toDateMonth","toDateYear","content","BlogContent","trimmedContent","substr","Math","min","length","indexOf","Name","Where","LiveIn","Age","__html","Url"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport DOMPurify from \"dompurify\";\n\n// import components\nimport BtnSecondary from \"../buttons/btnSecondary\";\n//import CategoryTag from \"../categoryTag/categoryTag\";\n\nconst BlogSummary = ({ blog }) => {\n  const { sanitize } = DOMPurify;\n  // get published date parse the string and set variables for day,\n  // month and year to customise date layout\n  const parsedDate = Date.parse(blog.PubDate);\n  const pubDateday = new Intl.DateTimeFormat(\"en-GB\", {\n    day: \"2-digit\"\n  }).format(parsedDate);\n  const pubDateMonth = new Intl.DateTimeFormat(\"en-GB\", {\n    month: \"long\"\n  }).format(parsedDate);\n  const pubDateYear = new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\"\n  }).format(parsedDate);\n\n  const fromDate = Date.parse(blog.DateFrom);\n  const fromDateday = new Intl.DateTimeFormat(\"en-GB\", {\n    day: \"2-digit\"\n  }).format(fromDate);\n  const fromDateMonth = new Intl.DateTimeFormat(\"en-GB\", {\n    month: \"long\"\n  }).format(fromDate);\n  const fromDateYear = new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\"\n  }).format(fromDate);\n\n  const toDate = Date.parse(blog.DateTo);\n  const toDateday = new Intl.DateTimeFormat(\"en-GB\", {\n    day: \"2-digit\"\n  }).format(toDate);\n  const toDateMonth = new Intl.DateTimeFormat(\"en-GB\", {\n    month: \"long\"\n  }).format(toDate);\n  const toDateYear = new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\"\n  }).format(toDate);\n\n  // store blog copy in const variable\n  const content = blog.BlogContent;\n  // trim the content to first closing paragraph\n  // this is used for the overview on the blog index/archive\n  let trimmedContent = content.substr(0);\n  trimmedContent = trimmedContent.substr(\n    0,\n    Math.min(trimmedContent.length, trimmedContent.indexOf(\"</p>\"))\n  );\n\n  return (\n    <>\n      <article className=\"wdgt\">\n        <h2>{blog.Name}</h2>\n        {/* \n        <p className=\"text-color-primary\">\n          {`${pubDateMonth} ${pubDateday}, ${pubDateYear}`}\n        </p>\n        <div className=\"wdgt\">\n          <CategoryTag blog={blog} />\n        </div>\n        */}\n        <ul>\n          <li><span className=\"highlight\">Where it is:</span> {blog.Where}</li>\n          <li><span className=\"highlight\">You need to live in:</span> {blog.LiveIn}</li>\n          <li><span className=\"highlight\">You must be:</span> {blog.Age}</li>\n          <li><span className=\"highlight\">It runs from:</span> {`${fromDateMonth} ${fromDateday}, ${fromDateYear}`} - {`${toDateMonth} ${toDateday}, ${toDateYear}`}</li>\n        </ul>\n        {/* \n        {blog.BlogImageBig && (\n          <Link to={blog.Url}>\n            <img src={blog.BlogImageBig} alt={blog.Name} className=\"pure-img pure-u-1\" />\n          </Link>\n        )}\n        */}\n        <p>{blog.BlogContent}</p>\n        <div dangerouslySetInnerHTML={{ __html: sanitize(trimmedContent) }} />\n        <div className=\"text-right\">\n          <BtnSecondary linkText=\"Find out more\" linkTo={blog.Url} />\n        </div>\n      </article>\n      <hr />\n    </>\n  );\n};\n\nexport default BlogSummary;\n"]},"metadata":{},"sourceType":"module"}